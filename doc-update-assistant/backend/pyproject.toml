[tool.poetry]
name = "docs-update-assistant"
version = "0.1.0"
description = "AI-powered documentation update assistant"
authors = ["Documentation Update Assistant Team"]
readme = "../README.md"

[tool.poetry.dependencies]
python = "^3.11"
# FastAPI and server
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
orjson = "^3.9.0"

# Data validation and settings
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# AI and ML libraries
openai = "^1.3.0"
sentence-transformers = "^2.2.2"
faiss-cpu = "^1.7.4"
tiktoken = "^0.5.1"

# File handling
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"

# Authentication (for future use)
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}

# Environment and utilities
python-dotenv = "^1.0.0"
numpy = "^1.25.0"


[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
httpx = "^0.25.0"

# Code quality
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"

# Development tools
pre-commit = "^3.4.0"
ipython = "^8.15.0"
jupyter = "^1.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
start = "uvicorn src.app.main:app --host 0.0.0.0 --port 8000"
dev = "uvicorn src.app.main:app --reload --host 0.0.0.0 --port 8000"
test = "pytest"
format = "black src tests && isort src tests"
lint = "flake8 src tests && mypy src"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sentence_transformers.*",
    "faiss.*",
    "tiktoken.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]