{
  "markdown": "[コンテンツにスキップ](https://openai.github.io/openai-agents-python/ja/voice/pipeline/#_1)\n\n# パイプラインと ワークフロー\n\n[`VoicePipeline`](https://openai.github.io/openai-agents-python/ref/voice/pipeline/#agents.voice.pipeline.VoicePipeline \"VoicePipeline\") は、エージェント的なワークフローを音声アプリに簡単に変換できるクラスです。ワークフローを渡すと、パイプラインが入力音声の文字起こし、音声終了の検知、適切なタイミングでのワークフロー呼び出し、そしてワークフロー出力を音声へ変換する処理を担当します。\n\n## パイプラインの設定\n\nパイプラインを作成する際に、以下を設定できます。\n\n1. [`workflow`](https://openai.github.io/openai-agents-python/ref/voice/workflow/#agents.voice.workflow.VoiceWorkflowBase \"VoiceWorkflowBase\") ‐ 新しい音声が文字起こしされるたびに実行されるコード\n2. 使用する [`speech-to-text`](https://openai.github.io/openai-agents-python/ref/voice/model/#agents.voice.model.STTModel \"STTModel\") および [`text-to-speech`](https://openai.github.io/openai-agents-python/ref/voice/model/#agents.voice.model.TTSModel \"TTSModel\") モデル\n3. [`config`](https://openai.github.io/openai-agents-python/ref/voice/pipeline_config/#agents.voice.pipeline_config.VoicePipelineConfig \"VoicePipelineConfig            dataclass   \") ‐ 以下のような内容を設定可能\n   - モデルプロバイダー。モデル名をモデルにマッピングします\n   - トレーシング。トレーシングの無効化、音声ファイルのアップロード可否、ワークフロー名、トレース ID など\n   - TTS と STT モデルの設定。プロンプト、言語、使用するデータ型など\n\n## パイプラインの実行\n\nパイプラインは [`run()`](https://openai.github.io/openai-agents-python/ref/voice/pipeline/#agents.voice.pipeline.VoicePipeline.run \"run            async   \") メソッドで実行できます。音声入力は次の 2 形式で渡せます。\n\n1. [`AudioInput`](https://openai.github.io/openai-agents-python/ref/voice/input/#agents.voice.input.AudioInput \"AudioInput            dataclass   \")\n\n\n    完全な音声トランスクリプトがある場合に使用し、その結果だけを生成したいときに便利です。話者の発話終了を検知する必要がないケース、たとえば録音済み音声やプッシュトゥートーク型アプリのようにユーザーが話し終えたタイミングが明確な場合に向いています。\n2. [`StreamedAudioInput`](https://openai.github.io/openai-agents-python/ref/voice/input/#agents.voice.input.StreamedAudioInput \"StreamedAudioInput\")\n\n\n    ユーザーの発話終了検知が必要な場合に使用します。検出された音声チャンクを順次プッシュでき、音声パイプラインが「アクティビティ検知」と呼ばれるプロセスを通じて適切なタイミングでエージェント ワークフローを自動的に実行します。\n\n## 結果\n\n音声パイプライン実行の結果は [`StreamedAudioResult`](https://openai.github.io/openai-agents-python/ref/voice/result/#agents.voice.result.StreamedAudioResult \"StreamedAudioResult\") です。これは発生したイベントをストリーミングで受け取れるオブジェクトです。いくつかの [`VoiceStreamEvent`](https://openai.github.io/openai-agents-python/ref/voice/events/#agents.voice.events.VoiceStreamEvent \"VoiceStreamEvent            module-attribute   \") があり、主なものは次のとおりです。\n\n1. [`VoiceStreamEventAudio`](https://openai.github.io/openai-agents-python/ref/voice/events/#agents.voice.events.VoiceStreamEventAudio \"VoiceStreamEventAudio            dataclass   \") ‐ 音声チャンクを含みます\n2. [`VoiceStreamEventLifecycle`](https://openai.github.io/openai-agents-python/ref/voice/events/#agents.voice.events.VoiceStreamEventLifecycle \"VoiceStreamEventLifecycle            dataclass   \") ‐ ターンの開始や終了などのライフサイクルイベントを通知します\n3. [`VoiceStreamEventError`](https://openai.github.io/openai-agents-python/ref/voice/events/#agents.voice.events.VoiceStreamEventError \"VoiceStreamEventError            dataclass   \") ‐ エラーイベントです\n\n```md-code__content\nresult = await pipeline.run(input)\n\nasync for event in result.stream():\n    if event.type == \"voice_stream_event_audio\":\n        # play audio\n    elif event.type == \"voice_stream_event_lifecycle\":\n        # lifecycle\n    elif event.type == \"voice_stream_event_error\"\n        # error\n    ...\n\n```\n\n## ベストプラクティス\n\n### 割り込み\n\nAgents SDK は現在 [`StreamedAudioInput`](https://openai.github.io/openai-agents-python/ref/voice/input/#agents.voice.input.StreamedAudioInput \"StreamedAudioInput\") に対して、組み込みの割り込み処理をサポートしていません。そのため、検出された各ターンごとにワークフローが個別に実行されます。アプリケーション内で割り込みを処理したい場合は、 [`VoiceStreamEventLifecycle`](https://openai.github.io/openai-agents-python/ref/voice/events/#agents.voice.events.VoiceStreamEventLifecycle \"VoiceStreamEventLifecycle            dataclass   \") イベントを監視できます。 `turn_started` は新しいターンが文字起こしされ、処理が開始されたことを示します。 `turn_ended` は該当ターンのすべての音声が送信された後にトリガーされます。たとえば、モデルがターンを開始した際にスピーカーのマイクをミュートし、そのターンに関連する音声をすべて送信し終えた後にアンミュートするといった制御に、これらのイベントを利用できます。",
  "metadata": {
    "favicon": "https://openai.github.io/openai-agents-python/images/favicon-platform.svg",
    "generator": "mkdocs-1.6.1, mkdocs-material-9.6.11",
    "title": "パイプラインと ワークフロー - OpenAI Agents SDK",
    "viewport": "width=device-width,initial-scale=1",
    "language": "ja",
    "scrapeId": "8dea9262-aa9c-4808-8991-8700ab5390b1",
    "sourceURL": "https://openai.github.io/openai-agents-python/ja/voice/pipeline/",
    "url": "https://openai.github.io/openai-agents-python/ja/voice/pipeline/",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic"
  }
}