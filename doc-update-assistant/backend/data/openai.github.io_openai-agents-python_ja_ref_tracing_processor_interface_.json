{
  "markdown": "[コンテンツにスキップ](https://openai.github.io/openai-agents-python/ja/ref/tracing/processor_interface/#processor-interface)\n\n# `Processor interface`\n\n### TracingProcessor\n\nBases: `ABC`\n\nInterface for processing spans.\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br> 9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>``` | ```md-code__content<br>class TracingProcessor(abc.ABC):<br>    \"\"\"Interface for processing spans.\"\"\"<br>    @abc.abstractmethod<br>    def on_trace_start(self, trace: \"Trace\") -> None:<br>        \"\"\"Called when a trace is started.<br>        Args:<br>            trace: The trace that started.<br>        \"\"\"<br>        pass<br>    @abc.abstractmethod<br>    def on_trace_end(self, trace: \"Trace\") -> None:<br>        \"\"\"Called when a trace is finished.<br>        Args:<br>            trace: The trace that started.<br>        \"\"\"<br>        pass<br>    @abc.abstractmethod<br>    def on_span_start(self, span: \"Span[Any]\") -> None:<br>        \"\"\"Called when a span is started.<br>        Args:<br>            span: The span that started.<br>        \"\"\"<br>        pass<br>    @abc.abstractmethod<br>    def on_span_end(self, span: \"Span[Any]\") -> None:<br>        \"\"\"Called when a span is finished. Should not block or raise exceptions.<br>        Args:<br>            span: The span that finished.<br>        \"\"\"<br>        pass<br>    @abc.abstractmethod<br>    def shutdown(self) -> None:<br>        \"\"\"Called when the application stops.\"\"\"<br>        pass<br>    @abc.abstractmethod<br>    def force_flush(self) -> None:<br>        \"\"\"Forces an immediate flush of all queued spans/traces.\"\"\"<br>        pass<br>``` |\n\n#### on\\_trace\\_start`abstractmethod`\n\n```md-code__content\non_trace_start(trace: Trace) -> None\n\n```\n\nCalled when a trace is started.\n\nParameters:\n\n| Name | Type | Description | Default |\n| --- | --- | --- | --- |\n| `trace` | `Trace` | The trace that started. | _required_ |\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>``` | ```md-code__content<br>@abc.abstractmethod<br>def on_trace_start(self, trace: \"Trace\") -> None:<br>    \"\"\"Called when a trace is started.<br>    Args:<br>        trace: The trace that started.<br>    \"\"\"<br>    pass<br>``` |\n\n#### on\\_trace\\_end`abstractmethod`\n\n```md-code__content\non_trace_end(trace: Trace) -> None\n\n```\n\nCalled when a trace is finished.\n\nParameters:\n\n| Name | Type | Description | Default |\n| --- | --- | --- | --- |\n| `trace` | `Trace` | The trace that started. | _required_ |\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>``` | ```md-code__content<br>@abc.abstractmethod<br>def on_trace_end(self, trace: \"Trace\") -> None:<br>    \"\"\"Called when a trace is finished.<br>    Args:<br>        trace: The trace that started.<br>    \"\"\"<br>    pass<br>``` |\n\n#### on\\_span\\_start`abstractmethod`\n\n```md-code__content\non_span_start(span: Span[Any]) -> None\n\n```\n\nCalled when a span is started.\n\nParameters:\n\n| Name | Type | Description | Default |\n| --- | --- | --- | --- |\n| `span` | `Span[Any]` | The span that started. | _required_ |\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>``` | ```md-code__content<br>@abc.abstractmethod<br>def on_span_start(self, span: \"Span[Any]\") -> None:<br>    \"\"\"Called when a span is started.<br>    Args:<br>        span: The span that started.<br>    \"\"\"<br>    pass<br>``` |\n\n#### on\\_span\\_end`abstractmethod`\n\n```md-code__content\non_span_end(span: Span[Any]) -> None\n\n```\n\nCalled when a span is finished. Should not block or raise exceptions.\n\nParameters:\n\n| Name | Type | Description | Default |\n| --- | --- | --- | --- |\n| `span` | `Span[Any]` | The span that finished. | _required_ |\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>``` | ```md-code__content<br>@abc.abstractmethod<br>def on_span_end(self, span: \"Span[Any]\") -> None:<br>    \"\"\"Called when a span is finished. Should not block or raise exceptions.<br>    Args:<br>        span: The span that finished.<br>    \"\"\"<br>    pass<br>``` |\n\n#### shutdown`abstractmethod`\n\n```md-code__content\nshutdown() -> None\n\n```\n\nCalled when the application stops.\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>48<br>49<br>50<br>51<br>``` | ```md-code__content<br>@abc.abstractmethod<br>def shutdown(self) -> None:<br>    \"\"\"Called when the application stops.\"\"\"<br>    pass<br>``` |\n\n#### force\\_flush`abstractmethod`\n\n```md-code__content\nforce_flush() -> None\n\n```\n\nForces an immediate flush of all queued spans/traces.\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>53<br>54<br>55<br>56<br>``` | ```md-code__content<br>@abc.abstractmethod<br>def force_flush(self) -> None:<br>    \"\"\"Forces an immediate flush of all queued spans/traces.\"\"\"<br>    pass<br>``` |\n\n### TracingExporter\n\nBases: `ABC`\n\nExports traces and spans. For example, could log them or send them to a backend.\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>``` | ```md-code__content<br>class TracingExporter(abc.ABC):<br>    \"\"\"Exports traces and spans. For example, could log them or send them to a backend.\"\"\"<br>    @abc.abstractmethod<br>    def export(self, items: list[\"Trace | Span[Any]\"]) -> None:<br>        \"\"\"Exports a list of traces and spans.<br>        Args:<br>            items: The items to export.<br>        \"\"\"<br>        pass<br>``` |\n\n#### export`abstractmethod`\n\n```md-code__content\nexport(items: list[Trace | Span[Any]]) -> None\n\n```\n\nExports a list of traces and spans.\n\nParameters:\n\n| Name | Type | Description | Default |\n| --- | --- | --- | --- |\n| `items` | `list[Trace | Span[Any]]` | The items to export. | _required_ |\n\nSource code in `src/agents/tracing/processor_interface.py`\n\n|     |     |\n| --- | --- |\n| ```<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>``` | ```md-code__content<br>@abc.abstractmethod<br>def export(self, items: list[\"Trace | Span[Any]\"]) -> None:<br>    \"\"\"Exports a list of traces and spans.<br>    Args:<br>        items: The items to export.<br>    \"\"\"<br>    pass<br>``` |",
  "metadata": {
    "title": "Processor interface - OpenAI Agents SDK",
    "favicon": "https://openai.github.io/openai-agents-python/images/favicon-platform.svg",
    "generator": "mkdocs-1.6.1, mkdocs-material-9.6.11",
    "language": "ja",
    "viewport": "width=device-width,initial-scale=1",
    "scrapeId": "a2ee1f12-974f-4b5a-8d1b-4b9070f71bf2",
    "sourceURL": "https://openai.github.io/openai-agents-python/ja/ref/tracing/processor_interface/",
    "url": "https://openai.github.io/openai-agents-python/ja/ref/tracing/processor_interface/",
    "statusCode": 200,
    "contentType": "text/html; charset=utf-8",
    "proxyUsed": "basic"
  },
  "warning": "This scrape job was throttled at your current concurrency limit. If you'd like to scrape faster, you can upgrade your plan."
}